{
  "Configuration": {
    "Services": {
      "MQQueue": {
        "Enabled": "false",
        "ProcessingTimeInMilliseconds": "60000",
        "IncomingQueues": {
          "IncomingQueue1": {
            "QueueName": "QUEUE.1",
            "QueueManagerName": "QM1",
            "FileDirectory": "\\source\\outputpath",
            "FileExtension": ".xml",
            "Enabled": "false"
          },
          "IncomingQueue2": {
            "QueueName": "QUEUE.2",
            "QueueManagerName": "QM1",
            "FileDirectory": "\\source\\outputpath1",
            "FileExtension": ".xml",
            "Enabled": "false"
          }
        },
        "OutgoingQueues": {
          "OutgoingQueue1": {
            "QueueName": "QUEUE.1",
            "QueueManagerName": "QM1",
            "FileDirectory": "\\source\\incomingfile",
            "FileExtension": ".xml",
            "CompletionDirectory": "\\source\\processed",
            "Enabled": "false"
          },
          "OutgoingQueue2": {
            "QueueName": "QUEUE.2",
            "QueueManagerName": "QM1",
            "FileDirectory": "\\source\\incomingfile1",
            "FileExtension": ".xml",
            "CompletionDirectory": "\\source\\processed1",
            "Enabled": "false"
          }
        },
        "QueueManagers": {
          "QM1": {
            "SET_MQCONN_PROPERTIES": "true",
            "MQSERVER": "DEV.ADMIN.SVRCONN/TCP/localhost(1414)",
            "MQCNO_RECONNECT": "false",
            "MESSAGE_TIMOUT_IN_MS": "1000", // read timeout if message not found
            "USE_ENCODING_LEADING_BYTES": "true",
            "MESSAGE_ENCODING": "UTF16",
            "USE_MQCSP_AUTHENTICATION_PROPERTY": "false",
            "USER_ID_PROPERTY": "USER_ID_PROPERTY", // it only use if USE_MQCSP_AUTHENTICATION_PROPERTY is true
            "PASSWORD_PROPERTY": "PASSWORD_PROPERTY",
            "SET_MQCONN_SSL": "false",
            "MQSSLKEYR": "*USER",
            //*USER: IBMï¿½ MQ.NET accesses the current user's certificate store to retrieve the client certificates.
            //*SYSTEM": IBM MQ.NET accesses the local computer account to retrieve the certificates.                
            "MQSSLPEERNAME": "PEERNAME",
            "MQCERTLABEL": "ibmwebspheremqlogonuserID",
            "MQSSLCIPHERSPEC": "TLS_RSA_WITH_AES_128_CBC_SHA",
            "MQSSLRESET": "500000",
            "MQSSLCERTREVOCATIONCHECK": "false",
            "RetryPolicy": {
              "WaitAndRetrySeconds": 60,
              "RetryCount": 3,
              "CircuitBreakerExceptionAllowedCount": 2,
              "CircutBreakerTimeoutSeconds": 5
            }
          }
        }
      },
      "RabbitMQ": {
        "Enabled": "true",
        "Consumers": {
          "Consumer1": {
            "QueueManager": "QueueManager1",
            "QueueName": "queue1",
            "ExchangeName": "amq.fanout",
            "RoutingKey": "",
            "ConsumerTag": "queue1-consumer",
            "AutoAcknowledgment": "false",
            "FileDirectory": "\\source\\output",
            "FileExtension": ".xml",
            "Enabled": "true"
          }
        },
        "Publishers": {
          "ProcessingTimeInMilliseconds": "60000",
          "Publisher1": {
            "QueueManager": "QueueManager1",
            "QueueName": "queue1",
            "ExchangeName": "amq.fanout",
            "RoutingKey": "",
            "ConfirmPublish": "false",
            "FileDirectory": "\\source\\incoming",
            "CompletionDirectory": "\\source\\completion",
            "FileExtension": ".txt",
            "Enabled": "true"
          }
        },
        "QueueManagers": {
          "QueueManager1": {
            "ClientProvidedName": "Pro1",
            "HostName": "localhost",
            "VirtualHostName": "/",
            "Username": "Username",
            "Password": "Password",
            "AutomaticRecoveryEnabled": "false",
            "TopologyRecoveryEnabled": "false",
            "SslEnabled": "false",
            "ServerName": "",
            "CertPath": "",
            "CertPassphrase": ""
          }
        }
      },
      "Kafka": {
        "Enabled": "false",
        "Consumers": {
          "Consumer1": {
            "GroupId": "mygroup",
            "Topics": "MyTopic1",
            "KafkaManager": "KafkaManagerPlaintext",
            "EnableAutoCommit": "false",
            "AutoCommitIntervalMs": "60000",
            "EnableAutoOffsetStore": "true",
            "AutoOffsetReset": "Earliest",
            "ManualCommit": "false",
            "FileDirectory": "\\source\\data\\incoming",
            "FileExtension": ".xml",
            "Enabled": "true"
          }
        },
        "Publisher": {
          "ProcessingTimeInMilliseconds": "60000",
          "Publisher1": {
            "KafkaManager": "KafkaManagerPlaintext",
            "Topics": "MyTopic1",
            "Acks": "All",
            "MessageSendMaxRetries": "4",
            "RetryBackoffMs": "60000",
            "EnableIdempotence": "true",
            "FileDirectory": "\\source\\data\\outgoing",
            "FileExtension": ".xml",
            "CompletionDirectory": "C:\\source\\data\\processed",
            "Enabled": "true"
          }
        },
        "KafkaManagers": {
          "KafkaManagerPlaintext": {
            "BootstrapServers": "localhost:9092",
            "SecurityProtocol": "PlainText"
          },
          "KafkaManagerSsl": {
            "BootstrapServers": "localhost:9093",
            "SecurityProtocol": "Ssl",
            "SslCaLocation": "\\ssl\\secrets\\root-ca.crt",
            "SslCertificateLocation": "\\ssl\\secrets\\kafka_client.crt",
            "SslKeyLocation": "\\ssl\\secrets\\kafka_client.key"
          }
        }
      },
      "AzureQueue": {
        "Enabled": "false",
        "ProcessingTimeInMilliseconds": "60000",
        "IncomingQueues": {
          "Queue1": {
            "QueueName": "immqiso",
            "QueueManager": "QueueManager1",
            "FileDirectory": "\\source\\data\\incomingfile",
            "FileExtension": ".xml",
            "Enabled": "true"
          }
        },
        "OutgoingQueues": {
          "Queue1": {
            "QueueName": "ommqiso",
            "QueueManager": "QueueManager1",
            "FileDirectory": "\\source\\incoming\\rabbitmqfile",
            "CompletionDirectory": "\\source\\completion\\rabbitmqfile",
            "FileExtension": ".txt",
            "Enabled": "true"

          }
        },
        "QueueManagers": {
          "QueueManager1": {
            "ConnectionString": "DefaultEndpointsProtocol=https;AccountName=isoqueues;AccountKey=bh4m8kVfNOLa/u0lFoMKDWshjvbmz+pCKGpxODwUF67vUyaY2+Y7Z0UaxsaPj+ZaoixYoly2dTHw+AStTtGMBw==;EndpointSuffix=core.windows.net",
            "RetryPolicy": {
              "DelayInSeconds": "60000",
              "MaxDelayInSeconds": "1200000",
              "MaxRetries": 4,
              "Mode": "Exponential", //Exponential or Fixed
              "NetworkTimeoutInSeconds": "2000000"
            }
          }
        }
      }
    }
    
  },
  "NLog": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  }
}
